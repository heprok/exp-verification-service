# --- enum

enum VerificationConfirmAction {
    Confirm
    Reject
}

enum VerificationStatus {
    NotConfirmed
    Pending
    Confirmed
    Rejected
}

# --- type

type Verification{
    id: ID!
    status: VerificationStatus!
    user: User!
    confirmData: ConfirmData!
}

type VerificationCreatedResult{
    id: ID!
    status: VerificationStatus!
}

type VerificationTabWithCount{
    id: ID!
    name: String!
    value: Int!
}

type ObjectInfo {
    id: ID!
    slug: String
    name: String!
    image: Image
}

type ConfirmData {
    objectInfo: ObjectInfo!
    title: String!
    startDate: Date!
    endDate: Date
}

type VerificationList {
    items: [Verification]!
    itemsCountByTab: [VerificationTabWithCount!]!
    totalItems: Int!
}

type VerificationRequestResult {
    result: VerificationCreatedResult
    userErrors: [Error]!
}

type ConfirmVerificationResult {
    success: Boolean!
    userErrors: [Error]!
}

# --- input

input VerificationListOptions {
    limit: Int = 10
    offset: Int = 0
    tabId: ID!
    filter: VerificationListFilterParameter
}

input VerificationListFilterParameter {
    userFullNames: [String!]
    placeOfWorkCompanyIds: [ID!]
    jobTitles: [String!]
    universityIds: [ID!]
    degrees: [String!]
}




